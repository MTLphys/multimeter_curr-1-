"""
This is the External wrapper for handling the Graphical User Interface(GUI) 

Generated By Matthew Larson on November 8th 2023
"""

import dearpygui.dearpygui as dpg 
import serial
from stageControl import *
import numpy as np 
import matplotlib.pyplot as plt
from Multimeter1 import *
import zhinst

def runGUIWrap(controller):
    dpg.create_context()
    dpg.create_viewport(title='Main Context',width=900,height=600)
    with dpg.font_registry():
        default_font = dpg.add_font('multimeter_curr/Montserrat-Regular.otf',20)
    dpg.bind_font(default_font)
    #set up units and stages:
    unitlist =['fs','ps','um','mm','ct']
    sunitlist=['fs/s','ps/s','um/s','mm/s','ct/s']
    stages   =['k1','k2','k3','k4']
    devices = populatePorts()
    z = np.zeros(1)
    #set up a storage location for figures
    figurefile='figureplot.png'
    #display a simple icon
    dpg.set_viewport_small_icon("Icon.ico")
    dpg.set_viewport_large_icon("Icon.ico")
    dev = serial.Serial(baudrate=9600,timeout=1)
    initialize_stageControl(dev)
    #set up stage initialization window all callbacks in stageControl.py
    with dpg.window(label='Stage Control Window',width=440,height=310,on_close=closeConnect):
        #setup control for stage initialization
        dpg.add_text('Stage Control')
        sstatus = dpg.add_text('Stage status:inactive')
        with dpg.group(horizontal=True):
            port = dpg.add_combo(devices,width=100,label='Select Device')
            dpg.add_button(label='connect device',callback=connectDevice,
                        user_data=port)
        #stage monitor
        with dpg.group(horizontal=True):
            stage=dpg.add_combo(stages,label='Stage',width=70,
                                default_value='k1')
            position = dpg.add_text('Current Position: Unknown')
        
            
        #translation control for stage positioning 
        with dpg.group(horizontal=True):    
            destination = dpg.add_input_double(label='',width=150)
            units = dpg.add_combo(unitlist,label='Destination',
                                width=70,default_value='fs')

        
        #unit setting 
        with dpg.group(horizontal=True): 
            speed = dpg.add_input_double(label='',default_value=1.5,
                                width=150)
            sunits = dpg.add_combo(sunitlist,label='Speed',
                                width=70,default_value='mm/s')
        
        #stage zero/position
        with dpg.group(horizontal=True):
            dpg.add_button(label='Zero Stage',callback=zeroStage,
                        user_data=[position,sstatus,stage])
            dpg.add_button(label='Get Position',callback=getPosition,
                        user_data=[position,sstatus,stage,units])

        #number of steps/steps per measurement
        with dpg.group(horizontal = True):
            spm = dpg.add_input_int(                label = 'Steps',
                                                    default_value = 10,
                                                    width = 150)

            mps = dpg.add_input_int(                label = 'Avg',
                                                    default_value = 10,
                                                    width = 150)
            
        #execute motion
        with dpg.group(horizontal=True):
            dpg.add_button(label='Run Measurement',callback=runscan,
                        user_data=[destination,position,stage,units,speed,sunits,sstatus,controller,spm,mps])
            dpg.add_button(label='Move Stage',callback=moveStage,
                        user_data=[destination,position,stage,units,speed,sunits,sstatus,controller,spm,mps])
            

    
        

    dpg.setup_dearpygui()
    dpg.show_viewport()
    dpg.maximize_viewport()
    #dpg.set_primary_window(window=0,value=True)
    dpg.start_dearpygui()
    dpg.destroy_context()